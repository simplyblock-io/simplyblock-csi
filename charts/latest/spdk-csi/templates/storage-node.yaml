---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: storage-node-sa

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: storage-node-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["create", "delete"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-list-sn
subjects:
- kind: ServiceAccount
  name: storage-node-sa
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: storage-node-role
  apiGroup: rbac.authorization.k8s.io

{{- range .Values.storagenode.daemonsets }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .name }}
  annotations:
    helm.sh/hook: post-install
spec:
  selector:
    matchLabels:
      app: {{ .appLabel }}
  template:
    metadata:
      labels:
        app: {{ .appLabel }}
    spec:
      serviceAccountName: storage-node-sa
      nodeSelector:
        type: {{ .nodeSelector }}
      volumes:
        - name: dev-vol
          hostPath:
            path: /dev
      hostNetwork: true
      {{- if .tolerations.create }}
      tolerations:
      - effect: {{ .tolerations.effect }}
        key: {{ .tolerations.key }}
        operator: {{ .tolerations.operator }}
        value: {{ .tolerations.value }}
      {{- end }}
      containers:
      - name: s-node-api-container
        image: "{{ $.Values.image.simplyblock.repository }}:{{ $.Values.image.simplyblock.tag }}"
        imagePullPolicy: "{{ $.Values.image.simplyblock.pullPolicy }}"
        command: ["python", "simplyblock_web/snode_app_k8s.py"]
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          privileged: true
        volumeMounts:
        - name: dev-vol
          mountPath: /dev
{{- end }}
