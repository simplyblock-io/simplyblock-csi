# SPDX-License-Identifier: Apache-2.0
# Copyright (c) Arm Limited and Contributors
# Copyright (c) Intel Corporation
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: spdkcsi-node
  namespace: {{ .Release.Namespace }}
{{ include "spdk.labels" . | indent 2 }}
spec:
  selector:
    matchLabels:
      app: spdkcsi-node
  template:
    metadata:
{{ include "spdk.labels" . | indent 6 }}
        app: spdkcsi-node
    spec:
      serviceAccountName: spdkcsi-node-sa
      hostNetwork: true
      {{- if .Values.node.tolerations.create }}
      tolerations:
      - operator: {{ .Values.node.tolerations.operator }}
        {{- if .Values.node.tolerations.effect }}
        effect: {{ .Values.node.tolerations.effect }}
        {{- end }}
        {{- if .Values.node.tolerations.key }}
        key: {{ .Values.node.tolerations.key }}
        {{- end }}
        {{- if .Values.node.tolerations.value }}
        value: {{ .Values.node.tolerations.value }}
        {{- end }}
      {{- end }}
      initContainers:
      - name: init-nvme
        image: "{{ .Values.image.spdkcsi.repository }}:{{ .Values.image.spdkcsi.tag }}"
        imagePullPolicy: {{ .Values.image.spdkcsi.pullPolicy }}
        securityContext:
          privileged: true
        volumeMounts:
        - name: host-root
          mountPath: /host
        command:
        - "/bin/sh"
        - "-c"
        - |
          chroot /host /bin/sh -c '
          . /etc/os-release
          case "$ID" in
            ubuntu|debian)
              INSTALL_CMD="apt-get update && apt-get install -y"
              ;;
            centos|rhel|fedora|almalinux|rocky|amzn)
              INSTALL_CMD="dnf install -y"
              ;;
            suse|opensuse-leap)
              INSTALL_CMD="zypper install -y"
              ;;
            *)
              echo "Unsupported Linux distribution: $ID"
              exit 1
              ;;
          esac

          if ! command -v nvme &> /dev/null; then
            $INSTALL_CMD nvme-cli
          fi

          if ! lsmod | grep nvme_tcp; then
            echo "Loading nvme-tcp module..."
            modprobe nvme-tcp || echo "Failed to load nvme-tcp"
          else
            echo "nvme-tcp module is already loaded"
          fi'
      containers:
      - name: spdkcsi-registrar
        securityContext:
          privileged: true
        image: "{{ .Values.image.nodeDriverRegistrar.repository }}:{{ .Values.image.nodeDriverRegistrar.tag }}"
        imagePullPolicy: {{ .Values.image.nodeDriverRegistrar.pullPolicy }}
        args:
        - "--v=5"
        - "--csi-address=unix:///csi/csi.sock"
        - "--kubelet-registration-path=/var/lib/kubelet/plugins/csi.simplyblock.io/csi.sock"
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        - name: registration-dir
          mountPath: /registration
      - name: spdkcsi-node
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN", "SYS_MODULE"]
          allowPrivilegeEscalation: true
        image: "{{ .Values.image.spdkcsi.repository }}:{{ .Values.image.spdkcsi.tag }}"
        imagePullPolicy: {{ .Values.image.spdkcsi.pullPolicy }}
        args:
        - "--v=5"
        - "--endpoint=unix:///csi/csi.sock"
        - "--nodeid=$(NODE_ID)"
        - "--node"
        env:
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "sudo modprobe nvme-tcp || echo failed to modprobe nvme-tcp"]
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        - name: plugin-dir
          mountPath: /var/lib/kubelet/plugins
          mountPropagation: "Bidirectional"
        - name: pod-dir
          mountPath: /var/lib/kubelet/pods
          mountPropagation: "Bidirectional"
        - name: host-dev
          mountPath: /dev
        - name: host-sys
          mountPath: /sys
        - name: spdkcsi-nodeserver-config
          mountPath: /etc/spdkcsi-nodeserver-config/
          readOnly: true
        - name: spdkcsi-config
          mountPath: /etc/spdkcsi-config/
          readOnly: true
        - name: spdkcsi-secret
          mountPath: /etc/spdkcsi-secret/
          readOnly: true
      volumes:
      - name: socket-dir
        hostPath:
          path: /var/lib/kubelet/plugins/csi.simplyblock.io
          type: DirectoryOrCreate
      - name: registration-dir
        hostPath:
          path: /var/lib/kubelet/plugins_registry/
          type: Directory
      - name: plugin-dir
        hostPath:
          path: /var/lib/kubelet/plugins
          type: Directory
      - name: pod-dir
        hostPath:
          path: /var/lib/kubelet/pods
          type: Directory
      - name: host-dev
        hostPath:
          path: /dev
      - name: host-sys
        hostPath:
          path: /sys
      - name: host-root
        hostPath:
          path: /
      - name: spdkcsi-nodeserver-config
        configMap:
          name: spdkcsi-nodeservercm
          optional: true
      - name: spdkcsi-config
        configMap:
          name: spdkcsi-cm
      - name: spdkcsi-secret
        secret:
          secretName: spdkcsi-secret
